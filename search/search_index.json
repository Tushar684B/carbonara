{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to carbonarr","text":"<p>A python package to do all ARR GIS analysis.</p> <ul> <li>Free software: MIT License</li> <li>Documentation: https://tushar684b.github.io/carbonarr</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>TODO</li> </ul>"},{"location":"carbonarr/","title":"carbonarr module","text":""},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v001-date","title":"v0.0.1 - Date","text":"<p>Improvement:</p> <ul> <li>TBD</li> </ul> <p>New Features:</p> <ul> <li>TBD</li> </ul>"},{"location":"common/","title":"common module","text":"<p>The common module contains common functions and classes used by the other modules.</p>"},{"location":"common/#carbonarr.common.hello_world","title":"<code>hello_world(name)</code>","text":"<p>Prints \"Hello World!\" to the console.</p> Source code in <code>carbonarr/common.py</code> <pre><code>def hello_world(name):\n    \"\"\"Prints \"Hello World!\" to the console.\n    \"\"\"\n\n    print(\"Hello World!\"+\" \"+name)\n</code></pre>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/tushar684b/carbonarr/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with <code>bug</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with <code>enhancement</code> and <code>help wanted</code> is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>carbonarr could always use more documentation, whether as part of the official carbonarr docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/tushar684b/carbonarr/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up carbonarr for local development.</p> <ol> <li> <p>Fork the carbonarr repo on GitHub.</p> </li> <li> <p>Clone your fork locally:</p> <pre><code>$ git clone git@github.com:your_name_here/carbonarr.git\n</code></pre> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for     local development:</p> <pre><code>$ mkvirtualenv carbonarr\n$ cd carbonarr/\n$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass flake8     and the tests, including testing other Python versions with tox:</p> <pre><code>$ flake8 carbonarr tests\n$ python setup.py test or pytest\n$ tox\n</code></pre> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated.     Put your new functionality into a function with a docstring, and add     the feature to the list in README.rst.</li> <li>The pull request should work for Python 3.8 and later, and     for PyPy. Check https://github.com/tushar684b/carbonarr/pull_requests and make sure that the tests pass for all     supported Python versions.</li> </ol>"},{"location":"faq/","title":"FAQ","text":""},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install carbonarr, run this command in your terminal:</p> <pre><code>pip install carbonarr\n</code></pre> <p>This is the preferred method to install carbonarr, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>To install carbonarr from sources, run this command in your terminal:</p> <pre><code>pip install git+https://github.com/tushar684b/carbonarr\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>To use carbonarr in a project:</p> <pre><code>import carbonarr\n</code></pre>"},{"location":"examples/intro/","title":"Intro","text":"In\u00a0[1]: Copied! <pre>print('Hello World!')\n</pre> print('Hello World!') <pre>Hello World!\n</pre>"},{"location":"examples/ipyleaflet/","title":"Ipyleaflet","text":"In\u00a0[1]: Copied! <pre>from ipyleaflet import Map, Marker\n\ncenter = (52.204793, 360.121558)\n\nm = Map(center=center, zoom=15)\n\nmarker = Marker(location=center, draggable=True)\nm.add(marker)\n\ndisplay(m)\n\n# Now that the marker is on the Map, you can drag it with your mouse,\n# it will automatically update the `marker.location` attribute in Python\n\n# You can also update the marker location from Python, that will update the\n# marker location on the Map:\nmarker.location = (50, 356)\n</pre> from ipyleaflet import Map, Marker  center = (52.204793, 360.121558)  m = Map(center=center, zoom=15)  marker = Marker(location=center, draggable=True) m.add(marker)  display(m)  # Now that the marker is on the Map, you can drag it with your mouse, # it will automatically update the `marker.location` attribute in Python  # You can also update the marker location from Python, that will update the # marker location on the Map: marker.location = (50, 356) In\u00a0[2]: Copied! <pre>import ipyleaflet\nm = ipyleaflet.Map(center = (10,10),zoom = 10)\nm.scroll_wheel_zoom = True\nm\n</pre> import ipyleaflet m = ipyleaflet.Map(center = (10,10),zoom = 10) m.scroll_wheel_zoom = True m Out[2]: In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[3]: Copied! <pre>import carbonarr\nm = carbonarr.Map()\nm.scroll_wheel_zoom = True\nm\n</pre> import carbonarr m = carbonarr.Map() m.scroll_wheel_zoom = True m Out[3]: In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"examples/vector/","title":"Vector","text":"In\u00a0[1]: Copied! <pre>import json\nfrom ipyleaflet import Map, GeoJSON\nwith open('parcel.geojson', 'r') as f:\n    data = json.load(f)\nm = Map( zoom=3)\n\ngeo_json = GeoJSON(\n    data=data,\n    \n)\nm.add(geo_json)\nm.scroll_wheel_zoom = True\n\nm\n</pre>  import json from ipyleaflet import Map, GeoJSON with open('parcel.geojson', 'r') as f:     data = json.load(f) m = Map( zoom=3)  geo_json = GeoJSON(     data=data,      ) m.add(geo_json) m.scroll_wheel_zoom = True  m Out[1]: In\u00a0[2]: Copied! <pre>import os\nimport json\nimport random\nimport requests\n\nfrom ipyleaflet import Map, GeoJSON\n\nimport  ipyleaflet\n\nwith open('parcel.geojson', 'r') as f:\n    data = json.load(f)\n\ndef random_color(feature):\n    return {\n        'color': 'black',\n        'fillColor': random.choice(['red', 'yellow', 'green', 'orange']),\n    }\n\nm = Map(center=(50.6252978589571, 0.34580993652344), zoom=3)\n\ngeo_json = GeoJSON(\n    data=data,\n    style={\n        'opacity': 1, 'dashArray': '9', 'fillOpacity': 0.1, 'weight': 1\n    },\n    hover_style={\n        'color': 'white', 'dashArray': '0', 'fillOpacity': 0.5\n    },\n    style_callback=random_color\n)\nm.add(geo_json)\nm.scroll_wheel_zoom = True\n\nm\n</pre> import os import json import random import requests  from ipyleaflet import Map, GeoJSON  import  ipyleaflet  with open('parcel.geojson', 'r') as f:     data = json.load(f)  def random_color(feature):     return {         'color': 'black',         'fillColor': random.choice(['red', 'yellow', 'green', 'orange']),     }  m = Map(center=(50.6252978589571, 0.34580993652344), zoom=3)  geo_json = GeoJSON(     data=data,     style={         'opacity': 1, 'dashArray': '9', 'fillOpacity': 0.1, 'weight': 1     },     hover_style={         'color': 'white', 'dashArray': '0', 'fillOpacity': 0.5     },     style_callback=random_color ) m.add(geo_json) m.scroll_wheel_zoom = True  m Out[2]: In\u00a0[3]: Copied! <pre>import carbonarr\nm = carbonarr.Map()\nm.add_basemap('OpenTopoMap')\nm.add_layers_control(position = 'topright')\nm.add_geojson_layer(filepath='parcel.geojson',name='parcels')\n# m.add_geojson_layer('europe_110.geo.json','europe')\nm.scroll_wheel_zoom = True\nm\n</pre> import carbonarr m = carbonarr.Map() m.add_basemap('OpenTopoMap') m.add_layers_control(position = 'topright') m.add_geojson_layer(filepath='parcel.geojson',name='parcels') # m.add_geojson_layer('europe_110.geo.json','europe') m.scroll_wheel_zoom = True m Out[3]: In\u00a0[4]: Copied! <pre>style = {\n    'opacity':0.8,'dashArray':'1','fillOpacity':0.1,'weight':1\n}\nhover_style = {\n    'color':'white','dashArray':'9','fillOpacity':1\n    \n}\nimport random\ndef random_color(feature):\n    return {\n        'color': 'black',\n        'fillColor': random.choice(['red', 'yellow', 'green', 'orange']),\n    }\n\nm.add_shapefile_layer('10 Parcels/Parcels.shp',name = 'shapefile',style = style, hover_style = hover_style,\n    style_callback=random_color)\n\nm\n</pre> style = {     'opacity':0.8,'dashArray':'1','fillOpacity':0.1,'weight':1 } hover_style = {     'color':'white','dashArray':'9','fillOpacity':1      } import random def random_color(feature):     return {         'color': 'black',         'fillColor': random.choice(['red', 'yellow', 'green', 'orange']),     }  m.add_shapefile_layer('10 Parcels/Parcels.shp',name = 'shapefile',style = style, hover_style = hover_style,     style_callback=random_color)  m Out[4]: In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"}]}